
Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/focal64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  
   config.vm.provider "virtualbox" do |vb|
     
	 vb.name = "javacd-lab"
	 
	 # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  
     # Customize the amount of memory on the VM:
     vb.memory = "8000"
	 
     # Customize the number of CPU
     vb.cpus = 6
	 
     # Video Memory (Important)
     vb.customize ["modifyvm", :id, "--vram", "90"]
	 
     # Clipboard
     vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
	 
  end
  
  # Install the GUI, VirtualBox Tools
  config.vm.provision "shell", path: "provisioners/setup.sh"
  
  # Position Configuration Files
  config.vm.provision "file", source: "jenkins/admin.groovy", destination: "/home/vagrant/"
  config.vm.provision "file", source: "jenkins/plugins.txt", destination: "/home/vagrant/"
  config.vm.provision "file", source: "manifests/argocd.yaml", destination: "/home/vagrant/"
  config.vm.provision "file", source: "manifests/ingress.yaml", destination: "/home/vagrant/"
  config.vm.provision "file", source: "manifests/flagsmith-ingress.yaml", destination: "/home/vagrant/"
  
  # Install Groovy
  #config.vm.provision "shell", path: "setup_groovy.sh"
  
  # Install Docker
  config.vm.provision "shell", path: "provisioners/setup_docker.sh"

  # Install Java + Jenkins
  config.vm.provision "shell", path: "provisioners/setup_java.sh"

  # Install k3d
  config.vm.provision "shell", path: "provisioners/setup_k3d.sh"
  
  # Install Kubectl
  #config.vm.provision "shell", path: "setup_kubectl.sh"
    
  # Install ArgoCd
  config.vm.provision "shell", path: "provisioners/setup_argo.sh"
  
  # Install ArgoCd in Staging
  config.vm.provision "shell", path: "provisioners/setup_argo_staging.sh"

  # Install Flagsmith
  config.vm.provision "shell", path: "provisioners/setup_flagsmith.sh"
  
  # Install Flagsmith Staging
  config.vm.provision "shell", path: "provisioners/setup_flagsmith_staging.sh"
  
  # Create Keys for GitHub
  config.vm.provision "shell", path: "provisioners/setup_ssh.sh"
  
  # Restart
  config.vm.provision "shell", inline: "sudo shutdown -r now"
  
end
