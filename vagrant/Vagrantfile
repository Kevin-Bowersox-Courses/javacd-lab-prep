
Vagrant.configure("2") do |config|
  
  
  config.vm.box = "ubuntu/focal64"
  config.vm.box_version = "20211007.0.0"
  
  # set auto_update to false, if you do NOT want to check the correct 
  # additions version when booting this machine
  config.vbguest.auto_update = false
  
  # do NOT download the iso file from a webserver
  config.vbguest.no_remote = true

   config.vm.provider "virtualbox" do |vb|
   	   
	 vb.name = "javacd-lab-2021-10-10"
	 
     # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  
     # Customize the amount of memory on the VM:
     vb.memory = "16000"
	 
     # Customize the number of CPU
     vb.cpus = 6
	 
     # Video Memory (Important)
     vb.customize ["modifyvm", :id, "--vram", "90"]
	 
     # Clipboard
     vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
	 
  end
  
  # Install the GUI, VirtualBox Tools
  config.vm.provision "shell", path: "provisioners/setup.sh"
  
  # Position Configuration Files
  config.vm.provision "file", source: "jenkins/admin.groovy", destination: "/home/vagrant/"
  config.vm.provision "file", source: "jenkins/plugins.txt", destination: "/home/vagrant/"
  config.vm.provision "file", source: "manifests/argocd.yaml", destination: "/home/vagrant/"
  config.vm.provision "file", source: "manifests/ingress.yaml", destination: "/home/vagrant/"
  
  # Install Docker
  config.vm.provision "shell", path: "provisioners/setup_docker.sh"

  # Install Java + Jenkins
  config.vm.provision "shell", path: "provisioners/setup_java.sh"

  # Install k3d
  config.vm.provision "shell", path: "provisioners/setup_k3d.sh"
      
  # Install ArgoCd
  config.vm.provision "shell", path: "provisioners/setup_argo.sh"
  
  # Install ArgoCd in Staging
  config.vm.provision "shell", path: "provisioners/setup_argo_staging.sh"
  
  # Create Keys for GitHub
  config.vm.provision "shell", path: "provisioners/setup_ssh.sh"
  
  # Add Course Materials and HUB
  config.vm.provision "shell", path: "provisioners/setup_lab_materials.sh"
  
  # Restart
  config.vm.provision "shell", inline: "sudo shutdown -r now"
  
end
